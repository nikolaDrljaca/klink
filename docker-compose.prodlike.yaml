# PRODLike docker compose script
version: '3.4'

services:
  client:
    container_name: klink-web
    build:
      context: ./klink-web
      dockerfile: Dockerfile
      args:
        VITE_BUILD_MODE: prodlike
    environment:
      NODE_ENV: production
    ports:
      - '3000:3000'
    depends_on:
      rest: 
        condition: service_started

  rest:
    container_name: klink-service
    build:
      context: .
      dockerfile: klink-rest/Dockerfile
    environment:
      HOP_URL: "http://hop-service:5000"
      HOP_API_KEY: "ed5b50b4-a8ef-43d6-8622-9f67f35700e5"
      APP_BASE_PATH: "http://localhost:3000"
    depends_on:
      db:
        condition: service_healthy

  # NOTE: Only for integrated testing in prodlike - not to be inserted into the production script
  hop-service:
    container_name: xurl-hop-service
    build:
      context: https://github.com/nikolaDrljaca/xurl.git
    ports:
      - "5000:5000"
    volumes:
      - "~/.dockerdata:/data"
    environment:
      DB_URL: "jdbc:sqlite:/data/hop-db.sqlite"
      API_KEY: "ed5b50b4-a8ef-43d6-8622-9f67f35700e5"
      VALKEY_HOST: "localhost"
      VALKEY_PORT: "6379"
      BASE_PATH: "http://localhost:5000"

  db:
    container_name: klink-db
    image: "postgres:17-alpine"
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: klinkdb # create database named klinkdb
      POSTGRES_HOST_AUTH_METHOD: trust  # Disables password requirement
    volumes:
      - "~/.dockerdata/pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d klinkdb -U user" ]
      interval: 15s
      timeout: 60s
      retries: 5
