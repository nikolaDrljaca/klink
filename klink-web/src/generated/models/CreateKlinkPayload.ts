/* tslint:disable */
/* eslint-disable */
/**
 * Klink API
 * API to manage Klinks
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KlinkEntry } from './KlinkEntry';
import {
    KlinkEntryFromJSON,
    KlinkEntryFromJSONTyped,
    KlinkEntryToJSON,
} from './KlinkEntry';

/**
 * 
 * @export
 * @interface CreateKlinkPayload
 */
export interface CreateKlinkPayload {
    /**
     * Collection name.
     * @type {string}
     * @memberof CreateKlinkPayload
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateKlinkPayload
     */
    id: string;
    /**
     * Collection description.
     * @type {string}
     * @memberof CreateKlinkPayload
     */
    description?: string;
    /**
     * 
     * @type {Array<KlinkEntry>}
     * @memberof CreateKlinkPayload
     */
    entries: Array<KlinkEntry>;
}

/**
 * Check if a given object implements the CreateKlinkPayload interface.
 */
export function instanceOfCreateKlinkPayload(value: object): value is CreateKlinkPayload {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('entries' in value) || value['entries'] === undefined) return false;
    return true;
}

export function CreateKlinkPayloadFromJSON(json: any): CreateKlinkPayload {
    return CreateKlinkPayloadFromJSONTyped(json, false);
}

export function CreateKlinkPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateKlinkPayload {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'description': json['description'] == null ? undefined : json['description'],
        'entries': ((json['entries'] as Array<any>).map(KlinkEntryFromJSON)),
    };
}

export function CreateKlinkPayloadToJSON(value?: CreateKlinkPayload | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'id': value['id'],
        'description': value['description'],
        'entries': ((value['entries'] as Array<any>).map(KlinkEntryToJSON)),
    };
}

