/* tslint:disable */
/* eslint-disable */
/**
 * Klink API
 * API to manage Klinks
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SyncPersistenceData
 */
export interface SyncPersistenceData {
    /**
     * Klink id - UUID as string.
     * @type {string}
     * @memberof SyncPersistenceData
     */
    key: string;
    /**
     * Stringified JSON value of type List-KlinkEntryApiDto-.
     * @type {string}
     * @memberof SyncPersistenceData
     */
    newValue: string;
    /**
     * Unix timestamp.
     * @type {number}
     * @memberof SyncPersistenceData
     */
    timeStamp: number;
    /**
     * Can be ignored.
     * @type {string}
     * @memberof SyncPersistenceData
     */
    url: string;
}

/**
 * Check if a given object implements the SyncPersistenceData interface.
 */
export function instanceOfSyncPersistenceData(value: object): value is SyncPersistenceData {
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('newValue' in value) || value['newValue'] === undefined) return false;
    if (!('timeStamp' in value) || value['timeStamp'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function SyncPersistenceDataFromJSON(json: any): SyncPersistenceData {
    return SyncPersistenceDataFromJSONTyped(json, false);
}

export function SyncPersistenceDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncPersistenceData {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'],
        'newValue': json['newValue'],
        'timeStamp': json['timeStamp'],
        'url': json['url'],
    };
}

export function SyncPersistenceDataToJSON(value?: SyncPersistenceData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'key': value['key'],
        'newValue': value['newValue'],
        'timeStamp': value['timeStamp'],
        'url': value['url'],
    };
}

